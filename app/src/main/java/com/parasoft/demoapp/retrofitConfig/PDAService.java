package com.parasoft.demoapp.retrofitConfig;

import java.util.Objects;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class PDAService {

    private static String baseUrl;
    private static String authToken;
    private static Retrofit retrofit;
    private static volatile boolean propertiesChanged = false;

    public static synchronized <T> T getClient(Class<T> serviceClass) {
        if(retrofit == null || propertiesChanged) {
            refreshRetrofit();
        }

        return retrofit.create(serviceClass);
    }

    private static void refreshRetrofit() {
        retrofit = new Retrofit.Builder()
                    .baseUrl(baseUrl)
                    .addConverterFactory(GsonConverterFactory.create())
                    .client(getOkHttpClient())
                    .build();
    }

    private static OkHttpClient getOkHttpClient() {
        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder();

        httpClientBuilder.addInterceptor(chain -> {
            Request original = chain.request();
            Request request = chain.request()
                    .newBuilder()
                    .headers(original.headers())
                    .removeHeader("User-Agent") // Remove the original User-Agent header of generated by okhttp
                    .addHeader("User-Agent", Objects.requireNonNull(System.getProperty("http.agent")))
                    .build();
            return chain.proceed(request);
        });

        if (authToken != null) {
            httpClientBuilder.addInterceptor(chain -> {
                Request original = chain.request();
                Request request = chain.request()
                        .newBuilder()
                        .headers(original.headers())
                        .removeHeader("Authorization")
                        .addHeader("Authorization", authToken)
                        .build();
                return chain.proceed(request);
            });
        }

        return httpClientBuilder.build();
    }

    public static void setBaseUrl(String baseUrl) {
        PDAService.baseUrl = baseUrl;
        propertiesChanged = true;
    }

    public static void setAuthToken(String authToken) {
        PDAService.authToken = authToken;
        propertiesChanged = true;
    }

    public static String getBaseUrl() {
        return baseUrl;
    }

    public static String getAuthToken() {
        return authToken;
    }

    public static boolean isPropertiesChanged() {
        return propertiesChanged;
    }

    public static Retrofit getRetrofit() {
        return retrofit;
    }
}
